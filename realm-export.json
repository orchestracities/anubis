{
  "id": "default",
  "realm": "default",
  "displayName": "OrchestraCities",
  "displayNameHtml": "<div class=\"kc-logo-text\"><span>EKZ Smart City</span></div>",
  "notBefore": 0,
  "revokeRefreshToken": false,
  "refreshTokenMaxReuse": 0,
  "accessTokenLifespan": 36000,
  "accessTokenLifespanForImplicitFlow": 36000,
  "ssoSessionIdleTimeout": 3600,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 31536000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": true,
  "rememberMe": true,
  "verifyEmail": false,
  "loginWithEmailAllowed": true,
  "duplicateEmailsAllowed": false,
  "resetPasswordAllowed": true,
  "editUsernameAllowed": false,
  "bruteForceProtected": true,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 1800,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 5,
  "roles": {
    "realm": [
      {
        "id": "36b03b77-42cd-4a75-b0b9-03fbf72102b7",
        "name": "data-admin",
        "composite": false,
        "clientRole": false,
        "containerId": "default",
        "attributes": {}
      },
      {
        "id": "92ef1463-7329-4d65-9d7e-c9639bbc2a20",
        "name": "groups",
        "composite": false,
        "clientRole": false,
        "containerId": "default",
        "attributes": {}
      },
      {
        "id": "4cb21248-e517-42a0-a690-ffe21c886aa8",
        "name": "realm-admin",
        "description": "admin of the default realm",
        "composite": false,
        "clientRole": false,
        "containerId": "default",
        "attributes": {}
      },
      {
        "id": "ec419207-7bb4-4103-a4a3-3db691ff2293",
        "name": "admin",
        "composite": true,
        "composites": {
          "client": {
            "realm-management": [
              "view-clients",
              "view-authorization",
              "view-events",
              "view-realm",
              "view-identity-providers",
              "query-users",
              "query-clients",
              "query-realms",
              "view-users",
              "query-groups"
            ]
          }
        },
        "clientRole": false,
        "containerId": "default",
        "attributes": {}
      },
      {
        "id": "a7b3ae2a-314c-43dc-931b-bd3226b447a9",
        "name": "permanent",
        "composite": false,
        "clientRole": false,
        "containerId": "default",
        "attributes": {}
      },
      {
        "id": "440b8b5f-4980-4951-9f00-2ee96839b27d",
        "name": "openid",
        "description": "access to user profile",
        "composite": false,
        "clientRole": false,
        "containerId": "default",
        "attributes": {}
      },
      {
        "id": "574fbfa8-b1f0-4088-b330-120eb6fa4337",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "default",
        "attributes": {}
      },
      {
        "id": "6df8d761-5be6-49c5-8df9-0846e326280f",
        "name": "name",
        "description": "access to user name",
        "composite": false,
        "clientRole": false,
        "containerId": "default",
        "attributes": {}
      },
      {
        "id": "dac6942d-5bd6-4f6c-8d30-ef6f17ebd91f",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "default",
        "attributes": {}
      },
      {
        "id": "9a88fa32-a895-43e5-8d32-8564248997fd",
        "name": "email",
        "description": "access to email",
        "composite": false,
        "clientRole": false,
        "containerId": "default",
        "attributes": {}
      },
      {
        "id": "061ae77c-f8bb-4d1c-9ef7-90c6296a2b84",
        "name": "user",
        "composite": false,
        "clientRole": false,
        "containerId": "default",
        "attributes": {}
      }
    ],
    "client": {
      "realm-management": [
        {
          "id": "0bf827cc-778b-4935-be82-fb7d81a13e98",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e01100ca-bbde-4123-9163-8b004567b083",
          "attributes": {}
        },
        {
          "id": "05b01928-9993-4a16-bf00-3246f265735a",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "e01100ca-bbde-4123-9163-8b004567b083",
          "attributes": {}
        },
        {
          "id": "30923f76-5b16-40aa-9133-d98ef5642600",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "e01100ca-bbde-4123-9163-8b004567b083",
          "attributes": {}
        },
        {
          "id": "c42f6430-2226-4fb5-981a-b8bec70e0fdc",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-clients",
                "manage-clients",
                "query-clients",
                "manage-events",
                "view-authorization",
                "manage-users",
                "manage-realm",
                "view-events",
                "impersonation",
                "create-client",
                "view-realm",
                "view-identity-providers",
                "query-users",
                "manage-identity-providers",
                "manage-authorization",
                "query-realms",
                "view-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e01100ca-bbde-4123-9163-8b004567b083",
          "attributes": {}
        },
        {
          "id": "29adb9c4-18bb-4324-9629-779dfc1d9ba6",
          "name": "view-groups",
          "description": "${role_view-groups}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e01100ca-bbde-4123-9163-8b004567b083",
          "attributes": {}
        },
        {
          "id": "6e156fa2-094e-40b7-a23e-3409f5007248",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "e01100ca-bbde-4123-9163-8b004567b083",
          "attributes": {}
        },
        {
          "id": "2bf569c7-cc3b-4276-b1bc-2b53c14b7c19",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "e01100ca-bbde-4123-9163-8b004567b083",
          "attributes": {}
        },
        {
          "id": "2facd9b2-8104-4ae1-ab29-4b8b9bc63810",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "e01100ca-bbde-4123-9163-8b004567b083",
          "attributes": {}
        },
        {
          "id": "b514387f-3c9e-4dbc-9527-0beb57351c11",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "e01100ca-bbde-4123-9163-8b004567b083",
          "attributes": {}
        },
        {
          "id": "7042185d-c14a-4103-b240-f197a1d6c59a",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "e01100ca-bbde-4123-9163-8b004567b083",
          "attributes": {}
        },
        {
          "id": "50812fcc-8a6a-48d6-9332-a6c991d130ce",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "e01100ca-bbde-4123-9163-8b004567b083",
          "attributes": {}
        },
        {
          "id": "dda67624-b4a1-4201-a09c-9f1595c40fa1",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "e01100ca-bbde-4123-9163-8b004567b083",
          "attributes": {}
        },
        {
          "id": "10e5b74c-2dea-4a6c-979b-e76e23575749",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "e01100ca-bbde-4123-9163-8b004567b083",
          "attributes": {}
        },
        {
          "id": "0b1aa159-04e2-4ffb-b499-b31e5ba3794a",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "e01100ca-bbde-4123-9163-8b004567b083",
          "attributes": {}
        },
        {
          "id": "f4440bb2-624d-411f-b888-0818bbd9d9a0",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "e01100ca-bbde-4123-9163-8b004567b083",
          "attributes": {}
        },
        {
          "id": "a48fe8ec-981b-4c98-be41-8171244b8207",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "e01100ca-bbde-4123-9163-8b004567b083",
          "attributes": {}
        },
        {
          "id": "a9645cf1-073b-4b1c-bf92-02de4d198720",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "e01100ca-bbde-4123-9163-8b004567b083",
          "attributes": {}
        },
        {
          "id": "38d2d5ad-8dc8-437c-9700-1cb49d0484bd",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "e01100ca-bbde-4123-9163-8b004567b083",
          "attributes": {}
        },
        {
          "id": "caef9455-af69-42ac-96a0-e5b629aaddec",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "e01100ca-bbde-4123-9163-8b004567b083",
          "attributes": {}
        },
        {
          "id": "ae82b618-dbd0-4bd7-99b5-781c93ba18dc",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e01100ca-bbde-4123-9163-8b004567b083",
          "attributes": {}
        },
        {
          "id": "a02464e5-5345-4a29-b096-8519e22cf2fc",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "e01100ca-bbde-4123-9163-8b004567b083",
          "attributes": {}
        }
      ],
      "elk": [],
      "security-admin-console": [],
      "resource_server": [
        {
          "id": "c8eb9411-ae33-44f4-a908-d6883a134a0f",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "1e90a9d9-0c6d-4582-b666-08ea4cc30cd1",
          "name": "entity:delete",
          "description": "delete an entity",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "16ad86b9-515a-47c6-b85c-7711fd309892",
          "name": "group:create",
          "description": "Creating a tenant subgroup in Keycloak",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "d60c61fc-d395-433c-80b9-f1838d0fa707",
          "name": "device:read",
          "description": "read device",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "663f542f-4477-499d-a6ba-b1a7c437ac74",
          "name": "alarm:write",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "16502b60-d3f5-4425-be46-0f359c078da8",
          "name": "group:write",
          "description": "Editing a tenant subgroup in keycloak",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "96b52987-2d58-44ba-9a7a-ab71482e4c7f",
          "name": "registration:create",
          "description": "create a registration",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "2b046983-fe15-4bbb-a0dc-ce32de0843a2",
          "name": "endpoint:create",
          "description": "create an endpoint",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "1c65c3c4-4609-428d-9d31-bb40cd0c195b",
          "name": "subscription:write",
          "description": "edit a subscription",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "122c8328-6b33-4370-b778-b053b6532226",
          "name": "device:data",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "a7377c98-d794-4a9e-85bd-9ff096e8423c",
          "name": "entitytype:read",
          "description": "read entity type",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "f6180a77-4249-4183-a366-08b6694324e7",
          "name": "user:delete",
          "description": "Deleting a user",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "59075967-d67b-48a1-8fbe-a144db574fcd",
          "name": "subscription:read",
          "description": "read a subscription",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "59b95c8f-aa7e-4d24-bb10-d0f91a679a59",
          "name": "endpoint:read",
          "description": "read endpoints",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "10b2874b-75bf-4dda-8974-2dc1738ab647",
          "name": "group:read",
          "description": "Seeing tenant subgroups in keycloak",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "4c6a4790-e9b9-419e-851c-01a158f265af",
          "name": "device:create",
          "description": "create a new device",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "98da08e8-b039-48ea-bdad-a86bc1d41c6f",
          "name": "subscription:create",
          "description": "create a subscription",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "51b6e198-53a7-4b5a-9d41-8a9991dfca9d",
          "name": "entity:op",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "4702cdd4-bc0e-486d-ac06-3ed8cadc2fee",
          "name": "devicegroup:create",
          "description": "create a device group",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "a71e9cac-7fba-4478-b0cb-b96f492c35f9",
          "name": "devicegroup:write",
          "description": "modify a device group",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "6512d898-e00e-4070-a60d-701774db716d",
          "name": "endpoint:delete",
          "description": "delete an endpoint",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "6e06f3c5-ffe8-41e3-b1c8-ce8a1d62289b",
          "name": "group:delete",
          "description": "Deleting tenant subgroups in Keycloak",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "bcf4e4d8-ce31-4828-b665-c14ccefeec73",
          "name": "registration:write",
          "description": "update a registration",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "e903c3e0-94b1-4c59-b21e-1a13245c0983",
          "name": "user:read",
          "description": "Seeing users in keycloak",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "2888cf07-0bd5-456c-a70b-df241108584e",
          "name": "endpoint:write",
          "description": "update an endpoint",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "8d1ab8fe-1533-4b03-a0b6-e8dbcfdd1c09",
          "name": "entity:read",
          "description": "read entities",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "93e6a3ba-fe36-435c-8e79-58e01e4008fe",
          "name": "entity:create",
          "description": "create a new entity",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "b5114f35-35a1-4821-910b-3de0a8a3913d",
          "name": "devicegroup:read",
          "description": "read device groups",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "4a47a696-5251-4759-b3fe-209ddc6178c4",
          "name": "user:create",
          "description": "Creating new users in Keycloak",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "31e0c64c-aff9-44e4-b173-d095a18aff75",
          "name": "alarm:delete",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "22629ae3-4077-4434-ab1f-a7fe303c6267",
          "name": "registration:read",
          "description": "read a registration",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "b8800ac9-06e4-4eef-997a-af0b502d1bb7",
          "name": "registration:delete",
          "description": "delete a registration",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "e2837273-36e1-4da5-b178-a27f49d12b7d",
          "name": "entity:write",
          "description": "update and entity",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "1a020fdd-379f-4977-968b-21eac2f0ec9b",
          "name": "alarm:create",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "84b27a0e-8f30-4229-8773-4c5fe160ba34",
          "name": "devicegroup:delete",
          "description": "delete a device group",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "f704d42a-789e-4fdd-9451-a6032adaa977",
          "name": "user:write",
          "description": "Editing users in Keycloak",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "f9213072-8d7a-4fd4-a3b9-58ccaa92085f",
          "name": "alarm:read",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "63262aa5-7022-4275-8d7d-88a22fde8ef1",
          "name": "subscription:delete",
          "description": "delete a subscription",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "d3ffc980-d58f-4af5-8665-d43b17856b27",
          "name": "device:delete",
          "description": "delete a device",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        },
        {
          "id": "8b3b2407-a53d-4a4b-9a6d-146ec6e7783f",
          "name": "device:write",
          "description": "update a device",
          "composite": false,
          "clientRole": true,
          "containerId": "33465fa4-5940-403e-929c-e7516e46422e",
          "attributes": {}
        }
      ],
      "crate": [
        {
          "id": "0321b7d0-47e6-4623-801f-8d60c9f35d4f",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "e4c0847a-5ae8-40e5-8f62-d3398403ccde",
          "attributes": {}
        }
      ],
      "broker": [
        {
          "id": "98cff7ab-3555-473a-9975-e42cd1c92d8c",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "f57820f9-eaf8-45bf-a7a5-f50c6139d163",
          "attributes": {}
        }
      ],
      "nosql": [
        {
          "id": "d3635735-5ef8-4fae-b44f-8263f60680fe",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "121e28fb-d2d6-4a11-bcc7-ca191bc36c09",
          "attributes": {}
        }
      ],
      "dataflow": [],
      "admin-cli": [
        {
          "id": "e85ee2ab-d3ba-489d-9644-4efddbfecc43",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "e3785d58-8ed2-4fa1-8cdc-8c2b4c2fc0a7",
          "attributes": {}
        }
      ],
      "pgadmin": [],
      "api": [],
      "portal": [],
      "dashboard": [
        {
          "id": "0601e457-0b6f-49bd-a49a-4cf08ec6b4ee",
          "name": "viewer",
          "description": "can view dashboards",
          "composite": false,
          "clientRole": true,
          "containerId": "e0dc6252-b7c1-458e-ada5-157410d154c0",
          "attributes": {}
        },
        {
          "id": "c49043d9-67d0-45fa-9cc4-563fa25eb6c1",
          "name": "editor",
          "description": "can edit dashboards",
          "composite": false,
          "clientRole": true,
          "containerId": "e0dc6252-b7c1-458e-ada5-157410d154c0",
          "attributes": {}
        },
        {
          "id": "e0527ec6-3af8-42d1-939d-22440a0206a0",
          "name": "admin",
          "description": "can administrate an organisation inside grafana",
          "composite": false,
          "clientRole": true,
          "containerId": "e0dc6252-b7c1-458e-ada5-157410d154c0",
          "attributes": {}
        }
      ],
      "account": [
        {
          "id": "180d6476-0254-440c-bfc8-55819bb65699",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "a5d1fd7a-25b6-4a8f-970d-68a6170513c4",
          "attributes": {}
        },
        {
          "id": "c9e98699-60f9-40db-9c6e-09bbd22a7de5",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "a5d1fd7a-25b6-4a8f-970d-68a6170513c4",
          "attributes": {}
        },
        {
          "id": "6a008f0d-515e-4812-8ae8-3f5dbbd53032",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "a5d1fd7a-25b6-4a8f-970d-68a6170513c4",
          "attributes": {}
        }
      ],
      "gravitee": [
        {
          "id": "69f28ce5-b09d-479f-8a73-bac58b020bd1",
          "name": "uma_protection",
          "composite": false,
          "clientRole": true,
          "containerId": "f832d0a2-e2c1-4f88-bd9c-1ef764547760",
          "attributes": {}
        },
        {
          "id": "d9fc3041-f7c7-44b9-8071-3790570786b3",
          "name": "API_PUBLISHER",
          "composite": false,
          "clientRole": true,
          "containerId": "f832d0a2-e2c1-4f88-bd9c-1ef764547760",
          "attributes": {}
        },
        {
          "id": "cf6c4940-dfd1-4b77-a4a6-a0914251a2a6",
          "name": "USER",
          "composite": false,
          "clientRole": true,
          "containerId": "f832d0a2-e2c1-4f88-bd9c-1ef764547760",
          "attributes": {}
        },
        {
          "id": "467c0bda-7b6e-4b05-80a5-165b45626627",
          "name": "ADMIN",
          "composite": false,
          "clientRole": true,
          "containerId": "f832d0a2-e2c1-4f88-bd9c-1ef764547760",
          "attributes": {}
        }
      ]
    }
  },
  "groups": [
    {
      "id": "8a5d5938-c800-43c5-8116-7167b817f21d",
      "name": "Admin",
      "path": "/Admin",
      "attributes": {},
      "realmRoles": [
        "data-admin",
        "realm-admin",
        "admin"
      ],
      "clientRoles": {
        "realm-management": [
          "manage-clients",
          "realm-admin",
          "view-groups"
        ]
      },
      "subGroups": []
    },
    {
      "id": "7ce9ae2a-b80b-4d67-b7ab-efc02f85183f",
      "name": "Town",
      "path": "/Town",
      "attributes": {
        "service": [
          "true"
        ],
        "tenant": [
          "true"
        ]
      },
      "realmRoles": [
        "uma_authorization"
      ],
      "clientRoles": {},
      "subGroups": [
        {
          "id": "775dd0e6-1385-4765-8dc5-53a852f00172",
          "name": "WasteManagement/Demo",
          "path": "/Town/WasteManagement/Demo",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "e4409cb2-3aa6-4d81-9044-e27299f58f20",
          "name": "EnvironmentManagement/Datakorum",
          "path": "/Town/EnvironmentManagement/Datakorum",
          "attributes": {
            "servicepath": [
              "true"
            ],
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "bcdddb4b-4b4e-412d-8106-e4107b237399",
          "name": "ParkingManagement/Nedap",
          "path": "/Town/ParkingManagement/Nedap",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "003bff24-05ac-46f2-9403-1331bc640537",
          "name": "EnvironmentManagement/Vaisala",
          "path": "/Town/EnvironmentManagement/Vaisala",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "af446572-eb38-4d93-bd6a-2c2c9093b767",
          "name": "TrafficManagement/Demo",
          "path": "/Town/TrafficManagement/Demo",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "07537677-52b5-4838-ba90-9e31cd2922bb",
          "name": "Developer",
          "path": "/Town/Developer",
          "attributes": {},
          "realmRoles": [
            "offline_access"
          ],
          "clientRoles": {
            "resource_server": [
              "entity:delete",
              "device:read",
              "device:data",
              "subscription:write",
              "entitytype:read",
              "subscription:read",
              "endpoint:read",
              "subscription:create",
              "device:create",
              "entity:op",
              "devicegroup:create",
              "devicegroup:write",
              "registration:write",
              "endpoint:write",
              "entity:read",
              "entity:create",
              "devicegroup:read",
              "registration:read",
              "entity:write",
              "alarm:read",
              "subscription:delete",
              "device:write"
            ],
            "gravitee": [
              "USER",
              "API_PUBLISHER"
            ]
          },
          "subGroups": []
        },
        {
          "id": "341f96e0-c636-4fd8-be10-c931d30169b9",
          "name": "User",
          "path": "/Town/User",
          "attributes": {},
          "realmRoles": [],
          "clientRoles": {
            "resource_server": [
              "user:read",
              "uma_protection",
              "entity:read",
              "entitytype:read"
            ],
            "gravitee": [
              "USER"
            ]
          },
          "subGroups": []
        },
        {
          "id": "1c961b36-66dc-4b75-91d9-efd46dd42839",
          "name": "TrafficManagement",
          "path": "/Town/TrafficManagement",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "837d5295-4f20-4a43-b7e3-20378950384c",
          "name": "ParkingManagement/OpenChargeMap",
          "path": "/Town/ParkingManagement/OpenChargeMap",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "e086e255-e30a-41fb-b873-4fb0dab96843",
          "name": "EnvironmentManagement/PurpleAir",
          "path": "/Town/EnvironmentManagement/PurpleAir",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "e18daafd-7bc5-4a54-b089-5b79b04cba71",
          "name": "TrafficManagement/HERE",
          "path": "/Town/TrafficManagement/HERE",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "cb7cae93-e27a-47ba-bf2c-f57ff2747030",
          "name": "EnvironmentManagement",
          "path": "/Town/EnvironmentManagement",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "2ca9ba87-bd1a-495c-8271-c81d7644eae2",
          "name": "WasteManagement/Sensoneo",
          "path": "/Town/WasteManagement/Sensoneo",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "2e86440e-8529-4e48-b49e-4297008b87f7",
          "name": "EnvironmentManagement/WAQI",
          "path": "/Town/EnvironmentManagement/WAQI",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "bdb8890f-89d5-4160-a9de-66225e5094b4",
          "name": "EnvironmentManagement/Cesva",
          "path": "/Town/EnvironmentManagement/Cesva",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "284e82f8-3517-40aa-b94e-37a5a644ac35",
          "name": "EnvironmentManagement/Decentlab",
          "path": "/Town/EnvironmentManagement/Decentlab",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "c6fbedfe-c255-46af-93dd-5dd4659960b5",
          "name": "EnvironmentManagement/HawaDawa",
          "path": "/Town/EnvironmentManagement/HawaDawa",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "1dcb0cfd-7def-4d43-8af7-34dcf6aa3bd0",
          "name": "EnvironmentManagement/Keacoustics",
          "path": "/Town/EnvironmentManagement/Keacoustics",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "09008c82-036d-4f6f-a0ce-70662fde74f8",
          "name": "ParkingManagement/Pni",
          "path": "/Town/ParkingManagement/Pni",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "a3c673c3-8001-49c1-903d-c704ae1577f5",
          "name": "EnvironmentManagement/Demo",
          "path": "/Town/EnvironmentManagement/Demo",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "b4133b5b-b5ca-48a7-8f03-9a4d08ddfc05",
          "name": "EnvironmentManagement/Nabel",
          "path": "/Town/EnvironmentManagement/Nabel",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "526dc449-f255-495b-93b0-8bd15674cd99",
          "name": "PowerManagement/Demo",
          "path": "/Town/PowerManagement/Demo",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "fcc3dfa6-989d-4b70-8f4e-ad4b5f51ae0c",
          "name": "ParkingManagement/Datakorum",
          "path": "/Town/ParkingManagement/Datakorum",
          "attributes": {
            "servicepath": [
              "true"
            ],
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "9c8dee67-0921-4a07-b674-d69d83c01dc7",
          "name": "EnvironmentManagement/MeteoSwiss",
          "path": "/Town/EnvironmentManagement/MeteoSwiss",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "7994ad5d-de06-4276-ab69-8458ee8e6925",
          "name": "MobilityManagement/Demo",
          "path": "/Town/MobilityManagement/Demo",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "1609fa92-ca72-4728-a882-9c5507e76ad0",
          "name": "PowerManagement/Esave",
          "path": "/Town/PowerManagement/Esave",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "5d7d81c8-5a9e-4e38-9178-82aca97a32c3",
          "name": "Admin",
          "path": "/Town/Admin",
          "attributes": {},
          "realmRoles": [
            "data-admin"
          ],
          "clientRoles": {
            "realm-management": [
              "view-clients",
              "view-users"
            ],
            "resource_server": [
              "uma_protection",
              "endpoint:create",
              "device:data",
              "user:delete",
              "subscription:read",
              "endpoint:read",
              "device:create",
              "devicegroup:write",
              "group:delete",
              "registration:write",
              "entity:create",
              "devicegroup:read",
              "alarm:delete",
              "registration:read",
              "registration:delete",
              "entity:write",
              "alarm:create",
              "user:write",
              "subscription:delete",
              "device:delete",
              "device:write",
              "entity:delete",
              "group:create",
              "device:read",
              "alarm:write",
              "group:write",
              "registration:create",
              "subscription:write",
              "entitytype:read",
              "group:read",
              "subscription:create",
              "entity:op",
              "devicegroup:create",
              "endpoint:delete",
              "user:read",
              "endpoint:write",
              "entity:read",
              "user:create",
              "devicegroup:delete",
              "alarm:read"
            ],
            "dashboard": [
              "viewer",
              "editor",
              "admin"
            ],
            "gravitee": [
              "ADMIN",
              "USER",
              "API_PUBLISHER"
            ]
          },
          "subGroups": []
        },
        {
          "id": "27c173fe-4b8a-42c0-8ac3-f75ae708583b",
          "name": "WasteManagement",
          "path": "/Town/WasteManagement",
          "attributes": {
            "servicepath": [
              "true"
            ],
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "54605238-30e2-46ad-a3e8-0361a30a30a5",
          "name": "EnvironmentManagement/OpenWeather",
          "path": "/Town/EnvironmentManagement/OpenWeather",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "9b46ae0b-5b35-4ce2-8ee4-a9b4e66c147e",
          "name": "WasteManagement/Ecomobile",
          "path": "/Town/WasteManagement/Ecomobile",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "fd2f0c35-9c57-422e-b72a-3c27ccd08c87",
          "name": "InfrastructureManagement",
          "path": "/Town/InfrastructureManagement",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "9b8fd954-215b-41a7-a0c7-4be89cc46ed4",
          "name": "PowerManagement",
          "path": "/Town/PowerManagement",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "6a2aa826-7a4f-4be4-b07e-ae6cf22ed117",
          "name": "ParkingManagement/Cleverciti",
          "path": "/Town/ParkingManagement/Cleverciti",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "7b32b443-1008-420c-9e32-9b0c85a375ca",
          "name": "PowerManagement/Datakorum",
          "path": "/Town/PowerManagement/Datakorum",
          "attributes": {
            "servicepath": [
              "true"
            ],
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "0e6c3d30-e3e9-482c-b32d-a8912eb87ce9",
          "name": "EnvironmentManagement/SmartSense",
          "path": "/Town/EnvironmentManagement/SmartSense",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "cbcb0874-897f-402c-8cfc-af4cc4acd772",
          "name": "MobilityManagement",
          "path": "/Town/MobilityManagement",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "6cc493a1-739e-4df8-ae2e-fb1f2bc0f6c6",
          "name": "EnvironmentManagement/Aeroqual",
          "path": "/Town/EnvironmentManagement/Aeroqual",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "947eb58b-5f97-4e8b-abd9-b94da8d48505",
          "name": "Devices",
          "path": "/Town/Devices",
          "attributes": {},
          "realmRoles": [],
          "clientRoles": {
            "resource_server": [
              "device:data"
            ]
          },
          "subGroups": []
        },
        {
          "id": "9367d3a7-75b2-40ef-8a3a-841abae2228d",
          "name": "ParkingManagement/EKZ",
          "path": "/Town/ParkingManagement/EKZ",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "7f210c04-8fd5-4384-859a-1b311cd5696f",
          "name": "ParkingManagement/Demo",
          "path": "/Town/ParkingManagement/Demo",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "ab13cb15-ae3c-47df-992d-6eca413c1db5",
          "name": "ParkingManagement",
          "path": "/Town/ParkingManagement",
          "attributes": {
            "servicepath": [
              "true"
            ],
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        },
        {
          "id": "f127ce5f-0c56-4df6-97c4-c05cd3cefa2a",
          "name": "InfrastructureManagement/Decentlab",
          "path": "/Town/InfrastructureManagement/Decentlab",
          "attributes": {
            "servicePath": [
              "true"
            ]
          },
          "realmRoles": [],
          "clientRoles": {},
          "subGroups": []
        }
      ]
    },
    {
      "id": "402bb58e-4bee-4102-804d-ee0018a9bc63",
      "name": "developer",
      "path": "/developer",
      "attributes": {},
      "realmRoles": [],
      "clientRoles": {},
      "subGroups": []
    },
    {
      "id": "c09d947c-ec23-45db-a85d-fca50f4976c3",
      "name": "view",
      "path": "/view",
      "attributes": {},
      "realmRoles": [],
      "clientRoles": {},
      "subGroups": []
    }
  ],
  "defaultRoles": [
    "user",
    "openid",
    "uma_authorization",
    "name",
    "groups",
    "email",
    "offline_access"
  ],
  "defaultGroups": [
    "/Town/User"
  ],
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "scopeMappings": [
    {
      "client": "dataflow",
      "roles": [
        "user"
      ]
    },
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    },
    {
      "clientScope": "permanent",
      "roles": [
        "permanent"
      ]
    },
    {
      "clientScope": "tenants",
      "roles": [
        "openid",
        "name",
        "email"
      ]
    }
  ],
  "clientScopeMappings": {
    "realm-management": [
      {
        "client": "admin-cli",
        "roles": [
          "view-realm",
          "view-identity-providers",
          "manage-identity-providers",
          "impersonation",
          "realm-admin",
          "create-client",
          "manage-users",
          "uma_protection",
          "query-realms",
          "view-authorization",
          "query-clients",
          "query-users",
          "manage-events",
          "manage-realm",
          "view-events",
          "view-groups",
          "view-users",
          "view-clients",
          "manage-authorization",
          "manage-clients",
          "query-groups"
        ]
      }
    ],
    "resource_server": [
      {
        "clientScope": "device:create",
        "roles": [
          "device:create"
        ]
      },
      {
        "clientScope": "device:data",
        "roles": [
          "device:data"
        ]
      },
      {
        "clientScope": "device:delete",
        "roles": [
          "device:delete"
        ]
      },
      {
        "clientScope": "device:read",
        "roles": [
          "device:read"
        ]
      },
      {
        "clientScope": "device:write",
        "roles": [
          "device:write"
        ]
      },
      {
        "clientScope": "devicegroup:create",
        "roles": [
          "devicegroup:create"
        ]
      },
      {
        "clientScope": "devicegroup:delete",
        "roles": [
          "devicegroup:delete"
        ]
      },
      {
        "clientScope": "devicegroup:read",
        "roles": [
          "devicegroup:read"
        ]
      },
      {
        "clientScope": "devicegroup:write",
        "roles": [
          "devicegroup:write"
        ]
      },
      {
        "clientScope": "entity:create",
        "roles": [
          "entity:create"
        ]
      },
      {
        "clientScope": "entity:delete",
        "roles": [
          "entity:delete"
        ]
      },
      {
        "clientScope": "entity:op",
        "roles": [
          "entity:op"
        ]
      },
      {
        "clientScope": "entity:read",
        "roles": [
          "entity:read"
        ]
      },
      {
        "clientScope": "entity:write",
        "roles": [
          "entity:write"
        ]
      },
      {
        "clientScope": "entitytype:read",
        "roles": [
          "entitytype:read"
        ]
      },
      {
        "clientScope": "registration:create",
        "roles": [
          "registration:create"
        ]
      },
      {
        "clientScope": "registration:delete",
        "roles": [
          "registration:delete"
        ]
      },
      {
        "clientScope": "registration:write",
        "roles": [
          "registration:write"
        ]
      },
      {
        "clientScope": "subscription:create",
        "roles": [
          "subscription:create"
        ]
      },
      {
        "clientScope": "subscription:delete",
        "roles": [
          "subscription:delete"
        ]
      },
      {
        "clientScope": "subscription:read",
        "roles": [
          "subscription:read"
        ]
      },
      {
        "clientScope": "subscription:write",
        "roles": [
          "subscription:write"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "c14c775b-ed07-4c16-9f1e-9058143f736e",
      "clientId": "dataflow",
      "rootUrl": "http://localhost",
      "adminUrl": "http://localhost",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [
        "*",
        "http://localhost"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": true,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {
        "browser": "6170ab32-32ad-4f07-9d02-5487b898fd4e"
      },
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "21767302-7287-48f6-9865-0c86f03cfccd",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bb278925-cd56-410a-b5bb-eaf88832e876",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "cdcd0ae6-90ab-4f1a-84f8-bddc10951037",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "tenants",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access"
      ]
    },
    {
      "id": "121e28fb-d2d6-4a11-bcc7-ca191bc36c09",
      "clientId": "nosql",
      "rootUrl": "http://localhost",
      "adminUrl": "http://localhost",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "http://localhost/*"
      ],
      "webOrigins": [
        "http://localhost"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {
        "browser": "6170ab32-32ad-4f07-9d02-5487b898fd4e"
      },
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "70d07295-d2af-407d-aee1-b6d717aa5a28",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ba189851-f07f-478c-a53f-f80b913e55c0",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "31005b31-828e-4308-acfb-8c61e83ed2dd",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access"
      ]
    },
    {
      "id": "e01100ca-bbde-4123-9163-8b004567b083",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "saml.authnstatement": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "7f44f58a-d192-4e1b-aa0b-abca14c9f6d1",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2ecb92c0-3b9d-462d-9dda-d974da28d0b8",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        },
        {
          "id": "42a4f55c-012d-45c6-9cb0-23f512266329",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "633f197f-17cd-4798-8fac-18286c48942e",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7b3e72af-b6f8-4f16-aea2-e51075d8b99e",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "61b6ab53-b4fa-4a30-9cc7-891a18c7bff1",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f2740659-c07d-4eab-bd59-4eaddac42072",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "82cf5d6d-2c1d-4f20-978f-8b03c486e95c",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1a91df5a-3a81-4864-a59a-c505d7cfa5aa",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access"
      ],
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "policyEnforcementMode": "ENFORCING",
        "resources": [],
        "policies": [],
        "scopes": []
      }
    },
    {
      "id": "f57820f9-eaf8-45bf-a7a5-f50c6139d163",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "ced2e9ae-5e45-4595-a4fb-662a930ad44c",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "8626d605-f496-4f03-a8c4-7a9a588fef74",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        },
        {
          "id": "b29ba565-c9d4-44e9-a586-c6396e5f8b19",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e4da074c-216b-4c1c-bfab-e7bb23f957c8",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "19750293-d649-4448-b3e0-e8936a9c4d02",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "587d1e5b-b782-4a7b-867e-d7132f6b0365",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access"
      ]
    },
    {
      "id": "e0dc6252-b7c1-458e-ada5-157410d154c0",
      "clientId": "dashboard",
      "name": "Dashboard",
      "description": "A dashboard service based on Grafana.",
      "rootUrl": "http://localhost:3000",
      "adminUrl": "http://localhost:3000",
      "baseUrl": "/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "http://localhost:3000/login/generic_oauth"
      ],
      "webOrigins": [
        "http://localhost:3000"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": true,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "83c86cfe-4823-401c-85e3-20797f0341ae",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3b96ab5e-5825-4511-a33e-34393d8c586d",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ba4c8450-b69d-4b1b-abaf-e69f426e9ab4",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "tenants",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access"
      ]
    },
    {
      "id": "b71dc3fb-86ca-4b4e-850d-a65f8fcbe1b8",
      "clientId": "elk",
      "rootUrl": "http://localhost:9200",
      "adminUrl": "http://localhost:9200",
      "baseUrl": "/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "http://localhost:9200/*"
      ],
      "webOrigins": [
        "http://localhost:9200"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {
        "browser": "6170ab32-32ad-4f07-9d02-5487b898fd4e"
      },
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "038864cd-ad20-4008-9d9d-90144131c143",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d5b0951f-814e-498f-b04d-17077733c2e5",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7f3a1b15-71d7-4823-b212-df88e6e7482a",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "role_list",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access"
      ]
    },
    {
      "id": "33882b83-3e13-469e-9930-3a09fd29eff2",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "baseUrl": "/auth/admin/default/console/index.html",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "/auth/admin/default/console/*"
      ],
      "webOrigins": [
        ""
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "saml.authnstatement": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "f43f8aa2-8bf3-4c08-92e6-3b3faf6264ef",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4809ca32-14e4-4cd9-bfa2-4ab46340d6cc",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "fedab3a4-3c2f-4cf6-8a1f-9d565aa72ce4",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-group-membership-mapper",
          "consentRequired": false,
          "config": {
            "full.path": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "1364cb98-34d1-448d-a5f4-7df63aa61935",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "a8afee75-aab1-46f8-b77a-18beba1769da",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ede0b2c7-af1f-4ea4-84e2-4008e7f2a644",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0f10f9a3-e09b-45c6-82d3-3289e7cce9c1",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        },
        {
          "id": "88fce908-dce6-4d0a-abfe-caa6e4e5d3dd",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access"
      ]
    },
    {
      "id": "33465fa4-5940-403e-929c-e7516e46422e",
      "clientId": "resource_server",
      "rootUrl": "http://localhost:8000/",
      "adminUrl": "http://localhost:8000/",
      "baseUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "defaultRoles": [
        "uma_protection"
      ],
      "redirectUris": [
        "http://localhost:8000/*"
      ],
      "webOrigins": [
        "*",
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "access.token.lifespan": "36000",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "7ac82ecc-33b1-4656-b873-0c0f79a265ea",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ce03b89a-738d-4ae8-9fea-5c3831369b97",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "014cc898-02a9-40cb-a7c3-430b4e7b76b3",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        },
        {
          "id": "876964fb-3f38-4cfc-8a16-ba1b1cbc6452",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c1e5388d-bbe0-4b10-92f1-e90c159d93d4",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "tenants",
        "role_list",
        "roles"
      ],
      "optionalClientScopes": [
        "entity:write",
        "entity:op",
        "device:read",
        "devicegroup:write",
        "entitytype:read",
        "device:create",
        "registration:write",
        "subscription:read",
        "registration:create",
        "device:write",
        "offline_access",
        "entity:read",
        "devicegroup:create",
        "registration:delete",
        "devicegroup:read",
        "address",
        "device:delete",
        "entity:delete",
        "devicegroup:delete",
        "subscription:create",
        "registration:read",
        "entity:create",
        "phone",
        "device:data",
        "permanent",
        "subscription:write",
        "subscription:delete"
      ]
    },
    {
      "id": "e4c0847a-5ae8-40e5-8f62-d3398403ccde",
      "clientId": "crate",
      "rootUrl": "http://localhost:4200/",
      "adminUrl": "http://localhost:4200/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [
        "http://localhost:4200/"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": true,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {
        "browser": "6170ab32-32ad-4f07-9d02-5487b898fd4e"
      },
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "20b18df7-6626-4714-90af-21e613576efc",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "da0878c0-30de-4e64-90e1-5c48cd4609ce",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3ee85f68-9c70-450a-bab4-24f95622c742",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "08029451-5d2f-432b-8940-f97a5e61fbe5",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "38853058-f3a9-49fa-9985-8eb152de463c",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9d98aa88-421d-4a1d-abf1-9b90aa0dae33",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "cc3ef5ab-76c6-4100-8db9-8397e2903301",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        },
        {
          "id": "7ab34f88-085b-4432-9c8e-366144dd312b",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9c3ff6d7-21d7-4cbd-964e-1ba91633af52",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access"
      ]
    },
    {
      "id": "d7d1978d-1a35-4415-8fdb-ee0f91ea51e7",
      "clientId": "portal",
      "rootUrl": "http://localhost:8000/",
      "adminUrl": "http://localhost:8000/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "http://localhost:8000/*"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": true,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "tenants",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access"
      ]
    },
    {
      "id": "7b9e74c9-a013-435c-8b33-27580bec716a",
      "clientId": "pgadmin",
      "rootUrl": "http://localhost",
      "adminUrl": "http://localhost",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "http://localhost/*"
      ],
      "webOrigins": [
        "http://localhost"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {
        "browser": "6170ab32-32ad-4f07-9d02-5487b898fd4e"
      },
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "ef130892-78b0-44f8-8d8e-1fd9a51c12b9",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7649054d-6c59-4c59-80d6-561a0dd17823",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        },
        {
          "id": "58eafc4b-97a4-41e5-86aa-14885a0c2600",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "00d00de1-cbea-46cd-80c9-2096f8b2b23c",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "57100691-7c86-4546-9a51-b0e39fdffec7",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "87efc17c-11d1-4f53-88af-2788807f9aa3",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access"
      ]
    },
    {
      "id": "962ee4dd-e9d5-4ee8-ac19-153232ce6e60",
      "clientId": "api",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "access.token.lifespan": "36000",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "tenants",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "entity:write",
        "entity:op",
        "device:delete",
        "device:read",
        "entity:delete",
        "devicegroup:write",
        "entitytype:read",
        "devicegroup:delete",
        "device:create",
        "registration:write",
        "subscription:create",
        "subscription:read",
        "registration:create",
        "registration:read",
        "device:write",
        "entity:create",
        "device:data",
        "offline_access",
        "entity:read",
        "devicegroup:create",
        "registration:delete",
        "subscription:write",
        "subscription:delete",
        "devicegroup:read"
      ]
    },
    {
      "id": "a5d1fd7a-25b6-4a8f-970d-68a6170513c4",
      "clientId": "account",
      "name": "${client_account}",
      "baseUrl": "/auth/realms/default/account",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "defaultRoles": [
        "manage-account",
        "view-profile"
      ],
      "redirectUris": [
        "/auth/realms/default/account/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "be37ec8f-17ea-4afd-a56d-4e9951d07a75",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        },
        {
          "id": "747f2a52-81c2-436d-b988-8068e5f013c4",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f92360e1-dabf-442f-8eb1-21070f04b4df",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "32c75643-64b7-47c3-925b-48dde19d8cf4",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "509278ba-d804-415c-8bd5-3fa1598909bd",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "deb7fd06-0aca-4a28-b165-977bda62556e",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access"
      ]
    },
    {
      "id": "e3785d58-8ed2-4fa1-8cdc-8c2b4c2fc0a7",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "http://localhost:3000/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": true,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "saml.authnstatement": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "1ed4a4d3-74e9-4f5c-ab81-541e754debee",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "40e4b3f9-f754-4385-ade5-e06c8ff51fce",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a920f47f-b947-41a9-9d3a-748ad0b5492a",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "570fa619-2fa0-44ca-930a-5cc297675d6b",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        },
        {
          "id": "8561afe3-f69e-4ae9-9fee-a4c8397605dd",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "cba53562-097b-41e4-b9bd-7321a1949acd",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d30b86b5-8728-4f1b-8427-e277be24e908",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a2b54975-1022-4088-8780-a674c3d2f15a",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f40bf191-3ced-4274-a9a3-927647ee0bc2",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "tenants",
        "role_list",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access"
      ]
    },
    {
      "id": "f832d0a2-e2c1-4f88-bd9c-1ef764547760",
      "clientId": "gravitee",
      "name": "API Manager",
      "description": "Provide supports for Orchestra Cities APIs Management",
      "rootUrl": "http://localhost:8084",
      "adminUrl": "http://localhost:8084",
      "baseUrl": "/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "http://localhost:8084"
      ],
      "webOrigins": [
        "*"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": true,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "authorizationServicesEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "3f3c5efb-4902-4a87-b764-f9b2c81659a9",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7823772a-c33f-4e10-9f48-aea94d1b401f",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        },
        {
          "id": "bebd193e-a905-48be-911b-6a975d332bcd",
          "name": "gravitee_roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "roles",
            "jsonType.label": "String",
            "usermodel.clientRoleMapping.clientId": "gravitee"
          }
        },
        {
          "id": "0722e7a3-5204-4a91-9446-6f2ce97f69df",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "a0aae497-253e-4d50-a6ef-ab69eca11d0a",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ca43b0f2-89af-40e0-9e7e-0b796f8902ed",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "451c71b5-b73f-42b8-b01f-31dda251585e",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "576b8772-e6c6-40a8-9a09-cf7aadfcde1f",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b7ab40d0-983a-44a4-bb63-592b42f74420",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3961e0b8-0ab4-4d6f-91c4-94943806cb56",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7c0d1e8c-8d08-49f4-af99-7f22fea96139",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "role_list",
        "tenant-names",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access"
      ],
      "authorizationSettings": {
        "allowRemoteResourceManagement": true,
        "policyEnforcementMode": "ENFORCING",
        "resources": [],
        "policies": [],
        "scopes": []
      }
    }
  ],
  "clientScopes": [
    {
      "id": "2a26d1ac-7228-4382-b509-d016990ceebd",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "dc87a472-a797-4958-9d86-61f3ff6169ed",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "7ef9bd0d-65d7-4ab2-8bdd-a78c91d7cd97",
      "name": "device:create",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      }
    },
    {
      "id": "3593b53f-b2ec-4992-819d-e79be23661d2",
      "name": "device:data",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      }
    },
    {
      "id": "f92f5650-f38e-4b52-923a-bf7dd51c72fa",
      "name": "device:delete",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      }
    },
    {
      "id": "1208e15a-9c4c-4550-93ae-e35288e030f0",
      "name": "device:read",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      }
    },
    {
      "id": "b1d5eb90-7cb5-47f5-9723-e871331fe6ff",
      "name": "device:write",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      }
    },
    {
      "id": "3bbb822a-f7f4-4af2-b2b9-69c013929948",
      "name": "devicegroup:create",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      }
    },
    {
      "id": "597e30c6-8d3e-474e-9612-7b33c6ba9f97",
      "name": "devicegroup:delete",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      }
    },
    {
      "id": "be8716ec-d8e7-44a1-860c-27e1e5ddaef9",
      "name": "devicegroup:read",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      }
    },
    {
      "id": "6462fad1-34a8-445b-b7d8-9cb3abb9ebfd",
      "name": "devicegroup:write",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      }
    },
    {
      "id": "2e1d0de0-75cd-49d6-b11e-f8a4be2086ee",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "af550d36-6b01-4362-be4b-efd0cc32cfe5",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        },
        {
          "id": "185f760e-2118-455e-b4cc-874f3dadb279",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        }
      ]
    },
    {
      "id": "56ca7d8e-06fd-45f1-8d9e-88c5509f749b",
      "name": "entity:create",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      }
    },
    {
      "id": "4a389dbf-3462-4b0c-ac21-c1c1b2680ffa",
      "name": "entity:delete",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      }
    },
    {
      "id": "5671c575-3a07-493c-8e4f-329857d52a60",
      "name": "entity:op",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      }
    },
    {
      "id": "fd967cea-9b9d-497e-b16b-8d74f1e3e02d",
      "name": "entity:read",
      "description": "entity:read",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      }
    },
    {
      "id": "e96ad378-a577-4013-91ff-e42449f56a54",
      "name": "entity:write",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      }
    },
    {
      "id": "cf10d594-c01b-4af5-a245-0af49ae4d49d",
      "name": "entitytype:read",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      }
    },
    {
      "id": "eb29b410-ad2b-4e53-aece-33d113b8473b",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false",
        "consent.screen.text": "${offlineAccessScopeConsentText}"
      }
    },
    {
      "id": "a215960e-b359-44b2-b6df-d7c275d275a3",
      "name": "permanent",
      "description": "permanent token scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      }
    },
    {
      "id": "93345b79-233c-47b5-8edb-70a1e5ecbd56",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "293f6040-025b-4a22-8adb-6e50f9ce7cc2",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "76c1afc0-ba62-47c5-b16a-d94d7ae27998",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "7c481106-2e22-4cd6-ade5-74278298b03f",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "6a021b1f-7014-471a-97dc-092ecfa4de7c",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9594b2d5-0109-40de-ad60-55903bd1360a",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6b91d9c7-728c-46ac-932e-f923910bcda5",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "937fa60a-5ba3-4008-a747-a0f09587d14f",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "String"
          }
        },
        {
          "id": "8dc71291-dba1-48a3-9f96-b5428f59b1de",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2f9f382d-371a-429f-a3f7-3c57cb9b4e9c",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "60931275-f876-48f4-8e51-69e09ecf0dfc",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ac0668f8-94a9-47f8-bc0a-1ddaf9bb2c1b",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bce0e873-d421-49ca-9d5b-8c6b932bd8d6",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1e4ef3d8-ca00-4f26-bb5a-0de1d987ba75",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ca5be252-b2f6-4840-a44c-b6086c108246",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "125ac921-7e36-43d4-893e-d2189313280b",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c7efac73-9992-4bee-8e85-d4f0ba1f8b70",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "1149607e-6141-479a-9e24-0ec2e6d335e3",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "47688269-ca66-4b38-9223-e8c6cbe07ad3",
      "name": "registration:create",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      }
    },
    {
      "id": "22f892ba-6b68-449d-a8f8-0bc187533899",
      "name": "registration:delete",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      }
    },
    {
      "id": "b3a5b290-97e7-4853-b666-ab56e651f866",
      "name": "registration:read",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      }
    },
    {
      "id": "4426b8c9-25bc-4763-b227-3d651bd8bc1a",
      "name": "registration:write",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      }
    },
    {
      "id": "8e60b1a3-0667-4b57-9656-5b4bc972bf4a",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "9a46007a-f9fe-4c84-90ec-c36f0d72bf0e",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "5cfa020f-43b4-494e-b558-12fda7197740",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "be769674-1cc7-4ca0-8401-d0c8398a9a66",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "d098f59d-7531-4524-a7e2-4d61980a8b8c",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "50a517a6-1140-4949-8f18-9ae8cb2b59fd",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "false",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "db75d660-16db-40fe-8079-4570975474a3",
      "name": "subscription:create",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      }
    },
    {
      "id": "df9ab33c-a369-4ca3-90b9-58d37cdeeece",
      "name": "subscription:delete",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      }
    },
    {
      "id": "f42bd9f6-484c-45cc-9e00-ddc9dd69f267",
      "name": "subscription:read",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      }
    },
    {
      "id": "3606b4d9-890d-48cc-8c0c-f6ed9f7ea414",
      "name": "subscription:write",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      }
    },
    {
      "id": "10922371-af9f-442b-bb75-381970e6bd9a",
      "name": "tenant-names",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "ac4f325f-a613-420d-88cb-96c1f08c790d",
          "name": "only-tenants-names",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-script-based-protocol-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "false",
            "access.token.claim": "false",
            "claim.name": "tenants",
            "script": "var HashMap = Java.type('java.util.HashMap');\nvar HashSet = Java.type('java.util.HashSet');\nvar ArrayList = Java.type('java.util.ArrayList');\nvar ModelToRepresentation = Java.type('org.keycloak.models.utils.ModelToRepresentation');\nvar groups = user.getGroups();\nvar tenants = new ArrayList();\n\ngroups.forEach(scanTenant);\n\nfunction scanTenant(group){\n    if ( isTenant(group)===true ) {\n        found = getTenant(group.getName());\n        if ( !found ) {\n            tenants.add(group.getName());\n        }\n    } else if( group !== null && group.getParent() !== null ) {\n        scanTenant(group.getParent());\n    }\n}\n\nfunction getTenant(name){\n    for (i= 0; i<tenants.size(); i++){\n        item = tenants.get(i);\n        if (item===name)\n            return item;\n    }\n    return null;\n}\n\nfunction getRoot(group){\n    if(group.getParent() !== null) \n        return getRoot(group.getParent());\n    return group;\n}\n\n\nfunction isTenant(group){\n    if (group.getParent()===null && \n        group.getFirstAttribute(\"tenant\") == \"true\"){\n        return true;\n    }\n    return false;\n}\n\ntoken.setOtherClaims(\"tenants\", tenants);",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "fe2f23b3-d678-488e-b802-f02162c95939",
      "name": "tenants",
      "description": "expose user_id",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "0cfa8f62-0716-4e0c-9127-b619ee78f00b",
          "name": "service",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-script-based-protocol-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "jsonType.label": "String",
            "script": "var HashMap = Java.type('java.util.HashMap');\nvar HashSet = Java.type('java.util.HashSet');\nvar ModelToRepresentation = Java.type('org.keycloak.models.utils.ModelToRepresentation');\nvar groups = user.getGroups();\nvar services = new HashMap();\n\ngroups.forEach(scanTenant);\ngroups.forEach(scanServicePath);\n\nfunction scanTenant(group){\n    if ( isTenant(group)===true ) {\n        if ( services.get(group.getName()) === null ) {\n            var servicePath = new HashSet();\n            services.put(group.getName(), servicePath);\n        }\n    } else if( group !== null && group.getParent() !== null ) {\n        scanTenant(group.getParent());\n    }\n}\n\nfunction scanServicePath(group){\n    if ( isServicePath(group)===true ) {\n        if ( services.get(getRoot(group).getName()) ){\n            var servicePath = Java.type('java.util.HashSet');\n            servicePath = services.get(getRoot(group).getName()) ;\n            var fullServicePath = ModelToRepresentation.buildGroupPath(group).substring((\"/\"+getRoot(group).getName()).length);\n            servicePath.add(fullServicePath);\n        }\n    } \n    if( group.getParent() !== null ) {\n        scanServicePath(group.getParent());\n    }\n}\n\nfunction getRoot(group){\n    if(group.getParent() !== null) \n        return getRoot(group.getParent());\n    return group;\n}\n\n\nfunction isServicePath(group){\n    if (group.getFirstAttribute(\"servicePath\") == \"true\")  \n        return true;\n    return false;\n}\n\nfunction isTenant(group){\n    if (group.getParent()===null && \n        group.getFirstAttribute(\"tenant\") == \"true\"){\n        if (services.get(group.getName()) === null) {\n            var servicePath = new HashSet();\n            services.put(group.getName(), servicePath);\n        }\n        return true;\n    }\n    return false;\n}\n\ntoken.setOtherClaims(\"fiware-services\", services);",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "74993e13-ee2d-4475-b7ae-0e19ec337642",
          "name": "client_check",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-script-based-protocol-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "id.token.claim": "false",
            "access.token.claim": "false",
            "claim.name": "client_check",
            "jsonType.label": "String",
            "script": "/**\n * Available variables: \n * user - the current user\n * realm - the current realm\n * token - the current token\n * userSession - the current userSession\n * keycloakSession - the current userSession\n */\n\n\nvar clientId = keycloakSession.getContext().getClient().getClientId();\n\n\n\ntoken.setOtherClaims(\"client_check\", clientId);\n//insert your code here..."
          }
        },
        {
          "id": "a259c1d3-db89-40b6-b881-804f7d4afc1e",
          "name": "tenant_roles_only",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-script-based-protocol-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "false",
            "claim.name": "tenants",
            "script": "var HashMap = Java.type('java.util.HashMap');\nvar HashSet = Java.type('java.util.HashSet');\nvar ArrayList = Java.type('java.util.ArrayList');\nvar ModelToRepresentation = Java.type('org.keycloak.models.utils.ModelToRepresentation');\nvar groups = user.getGroups();\nvar tenants = new ArrayList();\n\ngroups.forEach(scanTenant);\ngroups.forEach(scanGroups);\n\nfunction scanTenant(group){\n    if ( isTenant(group)===true ) {\n        found = getTenant(group.getName());\n        if ( !found ) {\n            var groups = new ArrayList();\n            var roles = new ArrayList();\n            var tenant = new HashMap();\n            tenant.put(\"id\",group.getId());\n            tenant.put(\"name\",group.getName());\n            tenant.put(\"groups\",groups);\n            tenant.put(\"roles\",roles);\n            tenants.add(tenant);\n        }\n    } else if( group !== null && group.getParent() !== null ) {\n        scanTenant(group.getParent());\n    }\n}\n\nfunction scanGroups(group){\n    if ( isTenant(group)===false )  {\n        found = getTenant(getRoot(group).getName());\n        if ( found ) {\n            groups = found.get(\"groups\");\n            roles = found.get(\"roles\");\n            current = getGroup(groups, group.getName());\n            if (! current ){\n                var rep = ModelToRepresentation.toRepresentation(group, true);\n                //if (rep.getRealmRoles())\n                //    roles.add(rep.getRealmRoles());\n                if( keycloakSession.getContext().getClient()){\n                    var clientId = \"resource_server\";\n                    if(rep.getClientRoles().get(clientId)) {\n                      roles.addAll(rep.getClientRoles().get(clientId));\n                    }\n                } else {\n                    var clients = realm.getClients();\n                     for (i= 0; i<clients.size(); i++){\n                        item = clients.get(i);\n                        var clientId = item.getClientId();\n                        if(rep.getClientRoles().get(clientId)) {\n                          roles.addAll(rep.getClientRoles().get(clientId));\n                        }\n                    }\n                }\n            }\n        }\n    }\n    if( group.getParent() !== null ) {\n        scanGroups(group.getParent());\n    }\n}\n\nfunction getTenant(name){\n    for (i= 0; i<tenants.size(); i++){\n        item = tenants.get(i);\n        if (item.get(\"name\")===name)\n            return item;\n    }\n    return null;\n}\n\nfunction getGroup(groups, name){\n    for (i= 0; i<groups.size(); i++){\n        item = groups.get(i);\n        if (item.get(\"name\")===name)\n            return item;\n    }\n    return null;\n}\n\nfunction getRoot(group){\n    if(group.getParent() !== null)\n        return getRoot(group.getParent());\n    return group;\n}\n\n\nfunction isServicePath(group){\n    if (group.getFirstAttribute(\"servicePath\") == \"true\" || group.getFirstAttribute(\"servicepath\") == \"true\")\n        return true;\n    return false;\n}\n\nfunction isTenant(group){\n    if (group.getParent()===null &&\n        group.getFirstAttribute(\"tenant\") == \"true\"){\n        return true;\n    }\n    return false;\n}\n\n\n\ntoken.setOtherClaims(\"tenant_roles\", tenants);",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "5e48df9d-f27b-4dcd-be2e-7288447fa82a",
          "name": "tenant-groups-roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-script-based-protocol-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "false",
            "claim.name": "tenants",
            "script": "var HashMap = Java.type('java.util.HashMap');\nvar HashSet = Java.type('java.util.HashSet');\nvar ArrayList = Java.type('java.util.ArrayList');\nvar ModelToRepresentation = Java.type('org.keycloak.models.utils.ModelToRepresentation');\nvar groups = user.getGroups();\nvar tenants = new ArrayList();\n\ngroups.forEach(scanTenant);\ngroups.forEach(scanGroups);\n\nfunction scanTenant(group){\n    if ( isTenant(group)===true ) {\n        found = getTenant(group.getName());\n        if ( !found ) {\n            var groups = new ArrayList();\n            var tenant = new HashMap();\n            tenant.put(\"id\",group.getId());\n            tenant.put(\"name\",group.getName());\n            tenant.put(\"groups\",groups);\n            tenants.add(tenant);\n        }\n    } else if( group !== null && group.getParent() !== null ) {\n        scanTenant(group.getParent());\n    }\n}\n\nfunction scanGroups(group){\n    if ( isTenant(group)===false )  {\n        found = getTenant(getRoot(group).getName());\n        if ( found ) {\n            groups = found.get(\"groups\");\n            current = getGroup(groups, group.getName());\n            if (! current ){\n                var newGroup = new HashMap(); \n                newGroup.put(\"name\", group.getName());\n                newGroup.put(\"is_servicepath\", isServicePath(group));\n                newGroup.put(\"parent\", group.getParent().getName());\n                var rep = ModelToRepresentation.toRepresentation(group, true);\n                if (rep.getRealmRoles())\n                    newGroup.put(\"realmRoles\",rep.getRealmRoles());\n                if( keycloakSession.getContext().getClient()){\n                    var clientId = \"resource_server\";\n                    //var clientId = keycloakSession.getContext().getClient().getClientId();\n                    if(rep.getClientRoles().get(clientId)) newGroup.put(\"clientRoles\",rep.getClientRoles().get(clientId));\n                } else {\n                    var clients = realm.getClients();\n                     for (i= 0; i<clients.size(); i++){\n                        item = clients.get(i);\n                        var clientId = item.getClientId();\n                        if(rep.getClientRoles().get(clientId)) newGroup.put(clientId,rep.getClientRoles().get(clientId));\n                    }\n                }\n                groups.add(newGroup);\n            }\n        }\n    } \n    if( group.getParent() !== null ) {\n        scanGroups(group.getParent());\n    }\n}\n\nfunction getTenant(name){\n    for (i= 0; i<tenants.size(); i++){\n        item = tenants.get(i);\n        if (item.get(\"name\")===name)\n            return item;\n    }\n    return null;\n}\n\nfunction getGroup(groups, name){\n    for (i= 0; i<groups.size(); i++){\n        item = groups.get(i);\n        if (item.get(\"name\")===name)\n            return item;\n    }\n    return null;\n}\n\nfunction getRoot(group){\n    if(group.getParent() !== null) \n        return getRoot(group.getParent());\n    return group;\n}\n\n\nfunction isServicePath(group){\n    if (group.getFirstAttribute(\"servicePath\") == \"true\" || group.getFirstAttribute(\"servicepath\") == \"true\")  \n        return true;\n    return false;\n}\n\nfunction isTenant(group){\n    if (group.getParent()===null && \n        group.getFirstAttribute(\"tenant\") == \"true\"){\n        return true;\n    }\n    return false;\n}\n\ntoken.setOtherClaims(\"tenants\", tenants);",
            "userinfo.token.claim": "true"
          }
        }
      ]
    },
    {
      "id": "e4f83790-917c-4420-a8e3-b27e7da981c7",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "6c4ee12b-5eec-4ad1-aacc-356ab58d5510",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "email",
    "profile"
  ],
  "defaultOptionalClientScopes": [
    "address",
    "phone",
    "permanent",
    "offline_access"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "xXSSProtection": "1; mode=block",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {
    "password": "**********",
    "starttls": "",
    "auth": "true",
    "host": "smtp.orchestracities.com",
    "from": "info@orchestracities.com",
    "ssl": "true",
    "user": "admin"
  },
  "loginTheme": "keycloak",
  "accountTheme": "keycloak",
  "adminTheme": "keycloak",
  "emailTheme": "keycloak",
  "eventsEnabled": true,
  "eventsExpiration": 2592000,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [
    "SEND_RESET_PASSWORD",
    "REMOVE_TOTP",
    "REVOKE_GRANT",
    "UPDATE_TOTP",
    "LOGIN_ERROR",
    "CLIENT_LOGIN",
    "RESET_PASSWORD_ERROR",
    "IMPERSONATE_ERROR",
    "CODE_TO_TOKEN_ERROR",
    "CUSTOM_REQUIRED_ACTION",
    "RESTART_AUTHENTICATION",
    "IMPERSONATE",
    "UPDATE_PROFILE_ERROR",
    "LOGIN",
    "UPDATE_PASSWORD_ERROR",
    "CLIENT_INITIATED_ACCOUNT_LINKING",
    "TOKEN_EXCHANGE",
    "LOGOUT",
    "REGISTER",
    "CLIENT_REGISTER",
    "IDENTITY_PROVIDER_LINK_ACCOUNT",
    "UPDATE_PASSWORD",
    "CLIENT_DELETE",
    "FEDERATED_IDENTITY_LINK_ERROR",
    "IDENTITY_PROVIDER_FIRST_LOGIN",
    "CLIENT_DELETE_ERROR",
    "VERIFY_EMAIL",
    "CLIENT_LOGIN_ERROR",
    "RESTART_AUTHENTICATION_ERROR",
    "EXECUTE_ACTIONS",
    "REMOVE_FEDERATED_IDENTITY_ERROR",
    "TOKEN_EXCHANGE_ERROR",
    "SEND_IDENTITY_PROVIDER_LINK_ERROR",
    "EXECUTE_ACTION_TOKEN_ERROR",
    "SEND_VERIFY_EMAIL",
    "EXECUTE_ACTIONS_ERROR",
    "REMOVE_FEDERATED_IDENTITY",
    "IDENTITY_PROVIDER_POST_LOGIN",
    "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
    "UPDATE_EMAIL",
    "REGISTER_ERROR",
    "REVOKE_GRANT_ERROR",
    "EXECUTE_ACTION_TOKEN",
    "LOGOUT_ERROR",
    "UPDATE_EMAIL_ERROR",
    "CLIENT_UPDATE_ERROR",
    "UPDATE_PROFILE",
    "CLIENT_REGISTER_ERROR",
    "FEDERATED_IDENTITY_LINK",
    "SEND_IDENTITY_PROVIDER_LINK",
    "SEND_VERIFY_EMAIL_ERROR",
    "RESET_PASSWORD",
    "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
    "REMOVE_TOTP_ERROR",
    "VERIFY_EMAIL_ERROR",
    "SEND_RESET_PASSWORD_ERROR",
    "CLIENT_UPDATE",
    "CUSTOM_REQUIRED_ACTION_ERROR",
    "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
    "UPDATE_TOTP_ERROR",
    "CODE_TO_TOKEN",
    "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR"
  ],
  "adminEventsEnabled": true,
  "adminEventsDetailsEnabled": true,
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "868d80b3-08b5-49b8-aa5b-c32db2af22e8",
        "name": "Allowed Client Templates",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "a9874f15-9b69-421d-af0b-fb9238903281",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "785da214-6388-4af1-9da4-92af5fed582d",
        "name": "Allowed Client Templates",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "798606a8-5255-4976-a8ec-95a45ccaf1a3",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "e0788b92-897f-43f2-82d3-7209115c73ea",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "fd05fa1b-4084-4ccb-9006-1d56b2ce1b68",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-full-name-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-address-mapper",
            "saml-role-list-mapper"
          ]
        }
      },
      {
        "id": "1303d3ca-ae17-48ab-914e-d2aa0896c7be",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "9130b977-96e2-467d-9620-d55a4eed773e",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-full-name-mapper",
            "saml-user-property-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper",
            "saml-role-list-mapper",
            "oidc-usermodel-attribute-mapper"
          ]
        }
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "48ab6640-150d-458e-b93f-a59c9985edf9",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "8bc479bf-ec1d-4258-af7d-d572f557acbd",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "f128b901-3ee1-48f6-862e-10321d2635b0",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": true,
  "supportedLocales": [],
  "defaultLocale": "en",
  "authenticationFlows": [
    {
      "id": "018c83b3-cbec-429c-9806-108705062ed1",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "idp-email-verification",
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "6170ab32-32ad-4f07-9d02-5487b898fd4e",
      "alias": "Required Admin Role Flow",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "Required Admin Role Flow forms",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        },
        {
          "authenticatorConfig": "AdminCheck",
          "authenticator": "auth-script-based",
          "requirement": "REQUIRED",
          "priority": 31,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "461a1e6e-2b13-4873-8112-5cd51bcfaddb",
      "alias": "Required Admin Role Flow forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "requirement": "OPTIONAL",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "94b98873-ca61-4de1-ab3f-7b5e925ea177",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "requirement": "OPTIONAL",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "8db096dd-6641-4930-95e9-d06bec90d653",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "forms",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "79ebbef5-39f1-4f66-80a8-a1ee8bc5a442",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-jwt",
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "044cba6c-ee66-4b0d-8a1f-8050306e1966",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "requirement": "OPTIONAL",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "7edffbb0-6fee-41b7-9f97-a72cd6fab479",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "ad439da1-2936-4a83-8e5b-35d975f12c3b",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "98899557-45ff-4e80-a23f-978c6cfec356",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "requirement": "OPTIONAL",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "c1f48a16-65a6-4c5b-af06-bf8d9442b494",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "requirement": "REQUIRED",
          "priority": 10,
          "flowAlias": "registration form",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "02bc0cee-a8eb-49a9-9ce0-7188c55901a0",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-profile-action",
          "requirement": "REQUIRED",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-password-action",
          "requirement": "REQUIRED",
          "priority": 50,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "requirement": "DISABLED",
          "priority": 60,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "905b87a7-d46e-4375-bb99-70d48cd1055e",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-credential-email",
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-password",
          "requirement": "REQUIRED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-otp",
          "requirement": "OPTIONAL",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "dcdfcb97-4ca3-4ab7-9c2a-9fb5df68c814",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "56521f6f-4280-4034-98d7-67403e7032cf",
      "alias": "AdminCheck",
      "config": {
        "scriptCode": "/*\n * Template for JavaScript based authenticator's.\n * See org.keycloak.authentication.authenticators.browser.ScriptBasedAuthenticatorFactory\n */\n\n// import enum for error lookup\nAuthenticationFlowError = Java.type(\"org.keycloak.authentication.AuthenticationFlowError\");\n\n/**\n * An example authenticate function.\n *\n * The following variables are available for convenience:\n * user - current user {@see org.keycloak.models.UserModel}\n * realm - current realm {@see org.keycloak.models.RealmModel}\n * session - current KeycloakSession {@see org.keycloak.models.KeycloakSession}\n * httpRequest - current HttpRequest {@see org.jboss.resteasy.spi.HttpRequest}\n * script - current script {@see org.keycloak.models.ScriptModel}\n * authenticationSession - current authentication session {@see org.keycloak.sessions.AuthenticationSessionModel}\n * LOG - current logger {@see org.jboss.logging.Logger}\n *\n * You one can extract current http request headers via:\n * httpRequest.getHttpHeaders().getHeaderString(\"Forwarded\")\n *\n * @param context {@see org.keycloak.authentication.AuthenticationFlowContext}\n */\nfunction authenticate(context) {\n\n    if(user.hasRole(realm.getRole(\"data-admin\"))){\n        context.success(); \n        return; \n    }\n\n    context.failure(AuthenticationFlowError.INVALID_USER);\n}"
      }
    },
    {
      "id": "3e4e8abe-11c5-4621-b2ea-c6f26227fafa",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "3621d90a-4dd4-4537-91db-7df904c5e8d1",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": true,
      "defaultAction": true,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": false,
      "defaultAction": true,
      "priority": 50,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "_browser_header.xXSSProtection": "1; mode=block",
    "_browser_header.xFrameOptions": "SAMEORIGIN",
    "_browser_header.strictTransportSecurity": "max-age=31536000; includeSubDomains",
    "permanentLockout": "false",
    "quickLoginCheckMilliSeconds": "1000",
    "displayName": "OrchestraCities",
    "_browser_header.xRobotsTag": "none",
    "maxFailureWaitSeconds": "900",
    "minimumQuickLoginWaitSeconds": "60",
    "displayNameHtml": "<div class=\"kc-logo-text\"><span>EKZ Smart City</span></div>",
    "failureFactor": "5",
    "actionTokenGeneratedByUserLifespan": "300",
    "maxDeltaTimeSeconds": "43200",
    "_browser_header.xContentTypeOptions": "nosniff",
    "offlineSessionMaxLifespan": "5184000",
    "actionTokenGeneratedByAdminLifespan": "43200",
    "_browser_header.contentSecurityPolicyReportOnly": "",
    "bruteForceProtected": "true",
    "_browser_header.contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "waitIncrementSeconds": "1800",
    "offlineSessionMaxLifespanEnabled": "false"
  },
  "keycloakVersion": "5.0.0",
  "userManagedAccessAllowed": false
}