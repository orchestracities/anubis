name: Policy API Tests

on:
  pull_request:
  push:
    branches:
    - master

jobs:
  python:
    env:
      DB_USER: admin
      DB_PASSWORD: password
      DB_NAME: anubis
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9']
        database-version: ['sqlite', 'postgres']
    steps:
      - uses: actions/checkout@v1
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pipenv'
          cache-dependency-path: |
            anubis-management-api/Pipfile.lock
      - name: Install pipenv
        working-directory: ./anubis-management-api
        run: pip install pipenv
      - name: Run python tests
        working-directory: ./anubis-management-api/src
        run: |
          pipenv install --dev
          export DB_TYPE=${{ matrix.database-version }}
          docker run --name db -p 5432:5432 -e POSTGRES_USER=$DB_USER -e POSTGRES_PASSWORD=$DB_PASSWORD -e POSTGRES_DB=$DB_NAME -d postgres:14
          pipenv run pytest
      - name: Stop db
        working-directory: ./anubis-management-api
        run: docker rm db
  e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Setup demo
        working-directory: ./scripts
        run: |
          ./run_demo.sh
      - name: Test CORS
        working-directory: ./scripts
        run: |
          ./test_cors.sh
      - name: Test demo
        working-directory: ./scripts
        run: |
          ./test_context_broker.sh
      - name: Clean up
        working-directory: ./scripts
        run: |
          ./clean.sh
  # opa:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - name: Test Rego
  #       working-directory: ./scripts
  #       run: |
  #         curl -L -o opa https://openpolicyagent.org/downloads/v0.37.2/opa_linux_amd64_static
  #         chmod 755 ./opa
  #         ./test_rego.sh
